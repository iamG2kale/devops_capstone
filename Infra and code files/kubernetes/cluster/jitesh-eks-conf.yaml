---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
# metadata to define cluster name and region
metadata:
  name: Jitesh-cluster
  region: us-east-1
  version: "1.20" # kubernetes version
vpc:
  id: "vpc-0f3d59dad874ea5c7"
  subnets:
    public:
      my-public-jitesh-a:
        id: "subnet-0d3faa2c491bc9ffe"
        az: "us-east-1a"
      my-public-jitesh-b:
        id: "subnet-08cb35f9dfc9e6b94"
        az: "us-east-1b"
    private:
      my-private-jitesh-a:
        id: "subnet-0c9d643f8e844d79c"
        az: "us-east-1a"
      my-private-jitesh-b:
        id: "subnet-0f073f9b2a8c072df"
        az: "us-east-1b"
  clusterEndpoints:
    publicAccess:  true
    privateAccess: true
  nat:
    gateway: Disable # disable since already created using terraform
# iam configuration with OIDC enabled
# also, this is usefull with add-ons that are used later
iam:
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: aws-load-balancer-controller
      namespace: kube-system
    wellKnownPolicies:
      awsLoadBalancerController: true
  - metadata:
      name: ebs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      ebsCSIController: true
  - metadata:
      name: efs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      efsCSIController: true
  - metadata:
      name: external-dns
      namespace: kube-system
    wellKnownPolicies:
      externalDNS: true
  - metadata:
      name: cert-manager
      namespace: cert-manager
    wellKnownPolicies:
      certManager: true
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
      labels: {aws-usage: "cluster-ops"}
    wellKnownPolicies:
      autoScaler: true
# nodegroups as per task defination
nodeGroups:
  - name: pvt-jitesh-a-1
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/Jitesh-cluster: "shared"
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 1
    minSize: 0
    maxSize: 3
    privateNetworking: true
    subnets:
      - my-private-jitesh-a
  - name: pub-jitesh-a-1
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/Jitesh-cluster: "shared"
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 0
    minSize: 0
    maxSize: 1
    subnets:
      - my-public-jitesh-a
